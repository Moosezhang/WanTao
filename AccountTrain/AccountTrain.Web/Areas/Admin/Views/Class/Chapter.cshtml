@{
    ViewBag.Title = "章节管理";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
<div class="wz">
        您当前所在的位置：章节管理
</div>
<div id="Chapter">
    <el-row style="margin-top:10px;margin-left:10px">
        <el-col span="24">
            <div>
                <el-input v-model="className" id="className" placeholder="请输入课程名称" clearable style="width:200px;"></el-input>
                <el-input v-model="chapterTitle" id="chapterTitle" placeholder="请输入章节标题" clearable style="width:200px;"></el-input>
                <el-button size="mini" style="margin-left:10px" type="primary"
                           v-on:click="QueryData()">查询</el-button>
                <el-button size="mini" type="warning"
                           v-on:click="handleAdd()">新增</el-button>
            </div>
        </el-col>
    </el-row>

    <div style="margin-top:5px;margin-left:10px">
        <template>
            <el-table border stripe
                      v-bind:data="tableData.slice((currentPage-1)*pagesize,currentPage*pagesize)"
                      v-bind:default-sort="{prop: 'ClassName', order: 'descending'}"
                      style="width: 100%">
                <el-table-column prop="ClassName"
                                 label="课程名称">
                </el-table-column>

                <el-table-column prop="ChapterTitle"
                                 label="章节标题">
                </el-table-column>
                <el-table-column prop="VideoTitle"
                                 label="音频标题"
                                 width="100" >
                </el-table-column>
                <el-table-column fixed="right"
                                 label="操作"
                                 width="200" header-align="center" align="center">
                    <template slot-scope="scope" >
								
                        <el-button size="mini"
                        		   type="primary"
                                   v-on:click="handleEdit(scope.row.ChapterId)">编辑</el-button>
                        <el-button v-if="scope.row.Status==1" size="mini"
                                   type="danger"
                                   v-on:click="handleDisable(scope.row.ChapterId,0)">禁用</el-button>
                    </template>
                </el-table-column>
            </el-table> 
            <el-pagination 
            				v-on:size-change="handleSizeChange"
							v-on:current-change="handleCurrentChange"
						    :current-page="currentPage"
						    :page-sizes="[10, 20, 50, 100]"
						    :page-size="pagesize"
						    layout="total, prev, pager, next"
						    :total="tableData.length">
            </el-pagination>
        </template>

    </div>

    <el-dialog title="章节信息" v-bind:visible.sync="dialogChapterFormVisible" v-model="dialogChapterFormVisible" style="height:500px;">
        <el-form model="form" style="margin-top:-20px;height:auto" label-width="80px">
            <el-row>
                <el-col span="12" style="display: none;">
                    <el-form-item label="Id">
                        <el-input v-model="form.ChapterId"  clearable></el-input>
                    </el-form-item>
                </el-col>
                <el-col span="12">
                    <el-form-item label="章节标题">
                        <el-input v-model="form.ChapterTitle"  clearable></el-input>
                    </el-form-item>
                </el-col>
                <el-col span="12">
                    <el-form-item label="音频标题">
                        <el-input v-model="form.VideoTitle"  clearable></el-input>
                    </el-form-item>
                </el-col>                
                
                <el-col span="12">
                    <el-form-item label="排  序">
                        <el-input v-model="form.ChapterNum"  clearable></el-input>
                    </el-form-item>
                </el-col>                             
                <el-col span="12">
                    <el-form-item label="所属课程">
                        <el-select v-model="form.ClassId" filterable placeholder="请选择课程">
                            <el-option v-for="item in ClassData"
                                       v-bind:key="item.ClassId"
                                       v-bind:label="item.ClassName"
                                       v-bind:value="item.ClassId">
                            </el-option>
                        </el-select>
                    </el-form-item>
                </el-col>
                <!--<el-col span="12">
                    <el-form-item label="备  注">
                        <el-input v-model="form.Remark" style="width:540px;" clearable></el-input>
                    </el-form-item>
                </el-col>-->
            </el-row>
            <el-row>
            	<el-col span="24">
                    <el-form-item label="音频地址">
                        <el-input v-model="form.VideoUrl"  clearable></el-input>
                    </el-form-item>
                </el-col>
            </el-row>
        </el-form>
        <div slot="footer" class="dialog-footer" style="margin-top:-30px;">
            <el-button size="small" v-on:click="dialogChapterFormVisible = false">取 消</el-button>
            <el-button type="primary" size="small" v-on:click="SaveChapter(form)">确 定</el-button>
        </div>
    </el-dialog>
</div>

<script>
    var ChapterVue;
    $(function () {
        NProgress.done();
        ChapterVue = new Vue({
            el: "#Chapter",
            data: {
                tableData: [],
                ClassData: [],
                className: "",
                chapterTitle:"",
                dialogChapterFormVisible: false,
                form: {},
                currentPage:1,
        		pagesize:8,
            },
            beforeCreate: function () {
                var _self = this;
                $.ajax({
                    type: "get",
                    dataType: "json",
                    contentType: "application/json",
                    url: "/Class/GetAllClass",
                    success: function (result) {
                        _self.ClassData = result;
                    }
                });
            },
            created: function () {
                this.QueryData();
            },
            methods: {
                handleAdd: function () {
                    var _self = this;
                    _self.form = {};
                    this.dialogChapterFormVisible = true;
                },
                handleEdit: function (ChapterId) {
                    var _self = this;
                    $.ajax({
                        type: "get",
                        dataType: "json",
                        contentType: "application/json",
                        url: "/Class/GetChapterByKey?pGuid=" + guid(),
                        data: {
                            id: ChapterId
                        },
                        success: function (result) {
                            _self.form = result;
                        }
                    });
                    this.dialogChapterFormVisible = true;
                },
                QueryData: function () {
                    var _self = this;
                    var className = this.className;
                    var chapterTitle=this.chapterTitle;
                    $.ajax({
                        type: "get",
                        dataType: "json",
                        contentType: "application/json",
                        url: "/Class/GetChaptersByCondition?pGuid=" + guid(),
                        data: {
                            className: className,
                            chapterTitle:chapterTitle,
                        },
                        success: function (result) {
                            _self.tableData = result;
                        },
                        error: function (json) {
                            _self.$message.error('查询章节信息失败');
                        }
                    });
                },
                SaveChapter: function (Chapter) {
                    var _self = this;
                    $.ajax({
                        type: "post",
                        dataType: "json",
                        url: "/Class/SaveChapter",
                        data: Chapter,
                        success: function (result) {
                            if (result) {
                                _self.dialogChapterFormVisible = false;
                                _self.QueryData();
                                _self.$message({
                                    type: 'success',
                                    message: '保存成功!'
                                });
                            } else {
                                _self.$message.error('保存章节信息失败');
                            }
                        },
                        error: function (json) {
                            _self.$message.error('保存字典信息失败');
                        }
                    });
                },
                handleDisable: function (ChapterId, status) {
                    var _self = this;
                    $.ajax({
                        type: "get",
                        dataType: "json",
                        url: "/Class/EnableChapter",
                        data: {
                            id: ChapterId,
                            status: status
                        },
                        success: function (result) {
                            if (result) {
                                _self.$message({
                                    type: 'success',
                                    message: '保存成功!'
                                });
                                _self.QueryData();
                            } else {
                                _self.$message({
                                    type: 'info',
                                    message: '保存失败!'
                                });
                            }
                        }
                    });
                },                
                handleSizeChange: function (size) {
			        this.pagesize = size;
			    },
			    handleCurrentChange: function(currentPage){
			        this.currentPage = currentPage;
			    }
            }

        });
    })

    function guid() {
        function S4() {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        }
        return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
    }


</script>